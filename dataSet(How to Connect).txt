inRoom False 상태

0010 :연결 수신(테스트)  - ok -> 0080전송 
0001 :이름 설정, 형식은 띄어쓰기 없이 바로 이름, 12자 내외 영어만, 특수문자 절대 금지 ex)0001UZQueen, 0001ADEL  - ok -> 0080 전송
0002 :방 목록 조회 > 형식 : 방이름!방이름!방이름

0003 :방 생성, 형식은 띄어쓰기 없이 바로 방 이름, 12자 내외 영어만, 특수문자 절대 금지 ex)0003ROOM - ok -> 0080 전송
0004 :방 참여, 형식은 띄어쓰기 없이 바로 방 이름, 12자 내외 영어만, 특수문자 절대 금지 ex)0003ROOM - ok -> 0080 전송

inRoom True 상태
플레이어 인, 아웃 - 맵 파일 코드는 모두 계속 주는게 아닌, 이벤트 발생시 로그로 출력할 것이니, 클라이언트 측에서 이를 읽고 사용하기
게임 시작, 게임 채팅 등은 서버에서 계속 전송 할 것임.


CMD(공백)메세지 >> 설정 메세지 (서버의 메세지)
roomChat!메세지 >> 방 카톡

방에 들어오면, CMD INFO인원 이 접속한 사람에게만 보내짐
+ CMD IN이름 이 모든 사람에게 보내짐, 접속한 사람만 IN뒤 이름이 자기거면 무시하고 다른 이들은, 인원 추가해서 새로고침

1000 :맵 목록 조회
    >송신 형식 맵코드!맵코드!맵코드...

1001 :맵 설정 > 수신 형식 : 1001맵코드
    >송신 형식 0080 :성공

'삭제' 1002 :게임 시작 > Udp소켓으로 요청 시작해야함

1003 :방 나가기

1004 :방 파쇄 (플레이어 1명일 때만)

1005 : 방정보 요청

1006 : 플레이어 준비사인 (맵 다운 이전에)
게임 시작은 누구나 가능 but 모두가 준비 됐을 때 이때 준비 된 사람이 준비 사인을 보낸다.
> 준비 사인을 보내면, 서버가 모든 플레이어에게 CMD READY이름 을 보낸다

1007 : 준비 해제

1008 : 게임 시작 신호 (모든 플레이어가 준비 되어야 함, 이때는 )



CMD GETMAP맵코드 >> 맵코드가 Extension 폴더안에 맵파일이 있는지 확인
존재하면 클라이언트가 



roomChat!이름:메세지
방이 살아있는 한(게임 중일 때도) 계속 보낸다.
게임 중에는 왼쪽 아래에, 채팅 창이 존재.
방에 있을 때는, 중앙 하단에 채팅 창이 존재.





2000CODE맵파일이름 :에디터에서 연결 후, 에디터와 통신시작 요청과, 맵 전송시작 전, 맵 파일 이름 중복 확인
 >> 존재함 : 0000 송신 - 다시 2000CODE맵파일이름 보낼 수 있다.
 >> 존재하지 않음(파일 저장 가능) : 0080송신 - 클라이언트에선, 0080수신 즉시, 맵파일 전송 시작 (준비 시그널과 같다.) 수신이 끝나면 클라이언트가 0080전송
 >> 맵 파일 전송 하면, 0080 실패하면 0000 뭐가 되었든, 실패하거나 성공하면 맵파일 올릴려면 다시 연결 해야함 (소켓과 핸들러를 닫기 때문이다.)
    >> 맵 뒤에 *가 있어, *가 있으면 받아오기 끝을 알림


7777 하트비트 신호
 >서버 응답 7780

9999 연결 종료



 1.모두 준비 되면, 아무나 시작 > 서버에 시작 시그널 1008보냄
2.서버는 맵저장 준비 시그널을 보낸다. 그리고 맵 파일이 존재하는지 검사 후 존재 하지 않으면 "NOFILE"을 보낸다.
존재 하면 서버 > 클라 1008맵코드(맵이름), 동시에 서버에서는 UDP통신을 개방한다

3.클라이언트는 맵이 이미 존재하면 0000, 없어서 받아야 한다면 1111을 tcp로 전송한다  1111전송하는 즉시, 클라이언트는 들어오는 요청을 맵을 받는것으로 한다.

4.서버는 0000을 받았을 시에는, UDP의 준비목록에 플레이어 활성화 1111을 받았을시 tcp로 맵을 보낸다,
5.클라이언트는 맵을 성공적으로 받으면 0080 실패하면 0000을 보내며 tcp로
6.0000시 방에서 나가게 coondown을 서버가 행하고, 0080은 무시한다

6.5
ALREADY: #결과가 맵 다운 필요없는 경우  >> 서버에서 보내지 X, 클라는 메세지 추가 안 받고 그대로 UDP통신 ㄲ
OK: #결과가 맵 다운 완료한 경우 >> 서버에서 보내지 X, 클라는 메세지 추가 안 받고 그대로 UDP통신 ㄲ
FAIL: #맵 다운 중 실패한 경우(클라이언트 측에서) >> 서버에서 보내지 X, 클라는 coondown됨( 서버와 클라 둘다 방에서 나가지게)
SOMETHING ERROR: #다운 중 뭔가 오류가 일어난 경우 >> 서버에서 보냄 O, 클라는 coondown됨( 서버와 클라 둘다 방에서 나가지게) > 서버가 smterr 전송
NOFILE: #서버에 맵 파일이 없는 경우 >> 서버에서 보냄 O(multiCastCmd으로 전부에게), 클라는 다시 방 화면으로 돌아오고, 맵파일 없다는 표시
 >>서버가 nofile보냄


7.클라이언트에선 0080을 받으면 바로 아래 udp과정을 행한다. 다른 오류 일 경우 위의 메뉴얼에 따라 처리





UDP 통신   (서버 : run > standingBy > startGame >> 스레드 2개 실행(recvMsg, sendMsg))


1.플레이어 준비 신호 받기
플레이어는 서버에   "S이름!플레이어 시작 주소"을 보낸다.
옳은 값이고, 수신이 되었다면 0080을 송신한다. 다른 값이면 0000을 수신한다.

클라이언트에선 만약 3초 이내로0080을 못 받거나(패킷 손실) 0000을 받으면 재 수신을 하도록 한다.

0080만들면, 서버에서 준비시그널 5555가 오기 전까지 대기한다 대기 메세지는 : 화면에 다른 플레이어 기다리는 중


2.총 플레이어 수 만큼 준비 시그널이 오면
모든 플레이어들에게, 5555를 보낸다 (게임 시작), 그리고 서버는 스레드 2개를 실행해 메세지를 주고 받는다.

3.게임 시작
-- client to server --
플레이어 좌표 (한명씩)
P방이름!좌표x,좌표y!플레이어 이름 (자신 것)
R방이름!R,G,B!플레이어 이름 (자신이 rgb를 바꿨을 때)

-- server to client --
P플레이어 이름!x좌표,y좌표    (한명마다)
Rr,g,b (0, 1,0)



플레이어 강제 종료 시
S플레이어이름


종료 시그널 > @!





정보 : udp통신에서, 서버측에서 받는 클라이언트의 addr값은, 연결동안은 동일하다.
즉, 처음 메세지를 받을때 addr을 저장해서, 계속 보낼 수 있다는 것!
>> 클라이언트에서 준비가 끝나면 먼저 메세지를 udp로 보내야 함.
하지만, udp의 안정성이 낮아, 안 보내질 수 있으니 타임을 설정해서 5초안에 서버에서 응답이 안 오면, 다시 보내는 식으로 해야 함.





#서버 기록

1.connDown은 udp통신 도중 클라이언트 측에서 나가야 할 시 발생하는 이벤트다













끄적이기


do{



}while(조건);
문은, while에 세미콜론이 붙고 최소 1번은 실행되는게 while과 다르다.

for은 조건에서 ;안의 값이 생략 가능하다

for(;;) > 무한 바놉ㄱ
for ( ; i < 5; i++)